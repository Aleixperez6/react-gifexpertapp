{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifexpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAElC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,mCCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBCC,qBAAW,WAERxB,EAAQC,GAEHwB,MAAK,SAAAd,GAEEY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAI1B,CAACpB,IAIGqB,EDnBwBI,CAAazB,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAMpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEafe,EA7BM,WAEjB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAOA,OACI,qCACA,8CACA,cAACD,EAAD,CAAcC,cAAeA,IAC7B,uBAEA,6BAEI0C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MChBrB4B,IAASC,OACL,cAAE,EAAF,IACFC,SAASC,eAAe,W","file":"static/js/main.ba8484cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n// import PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nexport default function AddCategory( {setCategories} ) {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputchange = (e) => {\r\n        setInputValue( e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats, ])\r\n            setInputValue('');\r\n        }\r\n\r\n    }    \r\n    \r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputchange}\r\n\r\n            />\r\n        </form>\r\n    )\r\n\r\n   \r\n    // AddCategory.propTypes = {\r\n    //     setCategories: PropTypes.func.isRequired\r\n    // };\r\n\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=b6OoVEbGTxsWYRzstJE6KXJSmANQAlv8`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n   \r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>     \r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n               {\r\n                   images.map( (img) => (\r\n                     <GifGridItem \r\n                     key={img.id}\r\n                     {...img}\r\n                     />\r\n\r\n                   ))\r\n               }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n     useEffect( () => {\r\n        \r\n        getGifs(category)\r\n\r\n            .then(img => {              \r\n\r\n                    setState({\r\n                        data: img, \r\n                        loading: false\r\n                    })             \r\n            })\r\n\r\n    }, [category] )\r\n\r\n\r\n\r\n    return state; // {data:[], loading true}\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n//rafc tab\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n    // const handleAdd = (e) => {\r\n    //     setCategories( [...categories, e] )\r\n    // }\r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory  setCategories={setCategories} />\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n            categories.map(category => (\r\n                <GifGrid \r\n                key={category}\r\n                category={category} />\r\n            ))\r\n            }\r\n        </ol>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifexpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    < GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}